$(document).ready(function () {
    var b = getParameterByName("MobileOptOut");
    if (b == "1" || (document.cookie && document.cookie.indexOf("MobileOptOut") >= 0)) {
        var a = new Date();
        a.setTime(a.getTime() + 3600000);
        document.cookie = "MobileOptOut=1; expires=" + (a.toGMTString()) + "; path=/"
    }
});
var logLibrary = new LogLibrary();
function LogLibrary() {
    try {
        var s = new Date();
        var r = new Array();

        function b(u, e, t) {
            if (u.attachEvent) {
                u.attachEvent("on" + e, t)
            } else {
                if (u.addEventListener) {
                    u.addEventListener(e, t, false)
                } else {
                    u["on" + e] = t
                }
            }
        }

        this.logError = true;
        this.logLoadingTime = false;
        var a = "";
        a = location.protocol + "//" + document.domain + "/jslog";
        var f = [];
        f.push("Objeto necessário");
        f.push("Script error.");
        f.push("Objecto necessário");
        f.push("'localName' é nulo ou não é um objeto");
        f.push("originalCreateNotification");
        f.push("array length");
        var m = 1 / 100;
        var d = 3 / 10;

        function o(t) {
            for (var e = 0;
                 e < f.length;
                 e++) {
                if (t.indexOf(f[e]) > -1) {
                    return true
                }
            }
            return false
        }

        if (this.logLoadingTime && Math.random() <= m) {
            b(document, "DOMContentLoaded", function () {
                g("DOMContentLoaded")
            });
            b(window, "load", function () {
                g("load")
            })
        }
        if (this.logError && Math.random() <= d) {
            window.onerror = function (w, t, e, v, u) {
                n(w, t, e, v, u)
            }
        }
        function q(v) {
            var e = "";
            for (var u = 0;
                 u < r.length;
                 u++) {
                var t = r[u];
                e += "|" + t.name;
                if (v) {
                    e += "," + t.time
                }
            }
            return e.replace(/^\s+|\s+$/g, "").replace(/^\|+|\|+$/g, "")
        }

        function p(t) {
            var e = document.createElement("a");
            e.href = t;
            return e.pathname + e.search
        }

        function h() {
            if (typeof ServerHost != "undefined") {
                return ServerHost
            }
            return ""
        }

        this.LogLoad = function (u) {
            try {
                var t = "unknown";
                if (typeof u.src != "undefined") {
                    t = p(u.src)
                } else {
                    if (typeof u.href != "undefined") {
                        t = p(u.href)
                    }
                }
                var x = new Date() - s;
                var w = {name: t, time: x};
                r.push(w)
            } catch (v) {
            }
        };
        function g(v) {
            try {
                var t = new Date() - s;
                var u = '{"Time":"' + t + '","Event":"' + encodeURIComponent(v) + '","Url":"' + window.location + '"}';
                logLibrary.LogEvent("LogTrace", u)
            } catch (w) {
            }
        }

        function n(t, v, w, x, B) {
            try {
                var z;
                var D = "", y = "", u = "", C = q();
                if (t.lineno) {
                    D = t.message;
                    y = t.filename;
                    u = t.lineno
                } else {
                    D = t;
                    y = v;
                    u = w
                }
                if (typeof B != "undefined" && B && B.stack) {
                    u += "|stack:" + B.stack
                }
                if (!o(D)) {
                    z = '{"Message":"' + encodeURIComponent(D) + '","LineNumber":"' + encodeURIComponent(u) + '","Url":"' + document.URL + '","FilesLoaded":"' + C + '","ServerIp":"' + h() + '","File":"' + y + '"}';
                    logLibrary.LogEvent("LogClientError", z)
                }
            } catch (A) {
            }
            return true
        }

        this.LogEvent = function (u, e) {
            var t;
            if (!window.XMLHttpRequest) {
                t = new ActiveXObject("Microsoft.XMLHTTP")
            } else {
                t = new XMLHttpRequest()
            }
            t.open("POST", a + "/" + u);
            t.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
            t.send(e)
        }
    } catch (k) {
    }
}
var CurrencyPrefixed = true;
var CurrentCurrencyFormat;
var StyleDivFunfo;
var PriceGroupsUC = undefined;
var HotelsUC = undefined;
var isB2B = function () {
    return CurrentPointOfSale.toUpperCase() == "BRADESCO" || CurrentPointOfSale.toUpperCase() == "AMEX"
};
var isAir = function () {
    return PriceGroupsUC && !HotelsUC
};
var isHotel = function () {
    return !PriceGroupsUC && HotelsUC
};
var isAirHotel = function () {
    return PriceGroupsUC && HotelsUC
};
function GetHTML(a) {
    var b = document.getElementById(a);
    var d = b.value;
    if (d == null || d == "") {
        d = b.innerHTML
    }
    return d.replace(/&lt;/g, "<").replace(/&gt;/g, ">")
}
function GetActualItem(a) {
    if (isAir) {
        return a.AirItems[0]
    } else {
        if (isHotel) {
            return a.HotelItems[0]
        } else {
            if (isAirHotel) {
                return a.AirHotelItems[0]
            }
        }
    }
}
function GetActualItems(a) {
    if (isAir) {
        return a.AirItems
    } else {
        if (isHotel) {
            return a.HotelItems
        } else {
            if (isAirHotel) {
                return a.AirHotelItems
            }
        }
    }
}
function StringToDateValues(a) {
    if (a != undefined && a != null && a != "") {
        return {Year: a.split("/")[2], Month: a.split("/")[1], Day: a.split("/")[0], isValid: true}
    }
    return {Year: 1, Month: 1, Day: 1, isValid: false}
}
function DateValuesToDate(a) {
    if (a.Year != undefined && a.Month != undefined && a.Day != undefined) {
        return new Date(a.Year, a.Month - 1, a.Day, 1, 0, 0)
    }
    return null
}
function CompareDateValues(b, a) {
    return (b && a) && (b.Year == a.Year) && (b.Month == a.Month) && (b.Day == a.Day)
}
function FormatCompleteDate(b) {
    var a = b.Day + " de " + Months[b.Month] + " de " + b.Year + " " + (b.Hour == 0 ? "0" : "") + b.Hour + ":";
    if (b.Minutes != undefined) {
        a += (b.Minutes < 10 ? "0" : "") + b.Minutes
    }
    return a
}
function GetDescriptionAgeBandType(a, d) {
    var b;
    switch (a) {
        case 1:
            b = "Adulto";
            break;
        case 2:
            b = "Criança";
            break;
        case 3:
            b = "Bebê";
            break;
        case 4:
            b = "Idoso";
            break;
        case 5:
            b = "Adolescente";
            break
    }
    if (d > 1 || d == 0) {
        b += "s"
    }
    return b
}
function FormatPointsB2B(a) {
    return Math.ceil(a)
}
function FormatCompleteDateDiference(f, e) {
    var a = DateValuesToDate(f);
    var b = DateValuesToDate(e);
    var d = (b - a);
    returnDate = d.Day + " de " + Months[d.Month] + " de " + d.Year + " " + d.Hour + ":";
    if (d.Minutes != undefined) {
        returnDate += (d.Minutes < 10 ? "0" : "") + d.Minutes
    }
    return returnDate
}
function FormatSimpleDateTimeValues(a) {
    return (a.Day < 10 ? "0" : "") + parseFloat(a.Day) + "/" + (a.Month < 10 ? "0" : "") + parseFloat(a.Month) + "/" + a.Year + " " + (a.Hour < 10 ? "0" : "") + a.Hour + ":" + (a.Minutes < 10 ? "0" : "") + a.Minutes
}
function FormatSimpleTimeValues(a) {
    return (a.Hour < 10 ? "0" : "") + a.Hour + ":" + (a.Minutes < 10 ? "0" : "") + a.Minutes
}
function FormatSimpleDateValues(a) {
    return (a.Day < 10 ? "0" : "") + parseFloat(a.Day) + "/" + (a.Month < 10 ? "0" : "") + parseFloat(a.Month) + "/" + a.Year
}
function FormatUSDSimpleDateValues(a) {
    return (a.Month < 10 ? "0" : "") + parseFloat(a.Month) + "/" + (a.Day < 10 ? "0" : "") + parseFloat(a.Day) + "/" + a.Year
}
function FormatDecimalPointsB2B(b) {
    var a = Math.ceil(b).toString();
    while (a.match(/^\d{4}/)) {
        a = a.replace(/(\d)(\d{3}(\.|$))/, "$1.$2")
    }
    return a
}
function FormatTripTypeCode(a) {
    if (a == 0) {
        return "None"
    }
    if (a == 1) {
        return "OW"
    }
    if (a == 2) {
        return "RT"
    }
}
$(".sem-caracter-especial").live("keypress", function (b) {
    var a = "ABCDEFGHIJKLMNOPQRSTUVXZWYabcdefghijklmnopqrstuvxzwyÇçãÃõÕóÓòÒáÁàÀéèÉÈíìÍÌ";
    if (b.which > -1 && b.which < 33) {
        return true
    }
    if (a.indexOf(String.fromCharCode(b.which)) == -1) {
        b.preventDefault()
    }
});
$(".sem-caracter-especial2").live("blur", function (a) {
    $(this).val($(this).val().RemoveDiacritics());
    if ($(this).val().replace(/[^a-zA-Z]+/g, "").length != $(this).val().length) {
        $(this).val("")
    }
});
$(".sem-caracter-especial-mantem-espacos").live("blur", function (a) {
    $(this).val($(this).val().RemoveDiacritics());
    if ($(this).val().replace(/[^a-zA-Z ]+/g, "").length != $(this).val().length) {
        $(this).val("")
    }
});
$(".sem-caracter-especial-location").live("blur", function (a) {
    $(this).val($(this).val().RemoveDiacritics());
    if ($(this).val().replace(/[^a-zA-Z \/,().'¸`-]+/g, "").length != $(this).val().length) {
        $(this).val("")
    }
});
$(".somente-numeros").live("blur", function (b) {
    var a = $(this);
    if (a.val().replace(/[^0-9]+/g, "").length != a.val().length) {
        a.val("")
    }
});
$(".data-valida").live("blur", function (a) {
    if (!isValidDate(this.value)) {
        this.value = ""
    }
});
$().mousemove(function (d) {
    var b = d.pageX;
    var a = d.pageY
});
var dateFormat = function () {
    var a = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g, b = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g, e = /[^-+\dA-Z]/g, d = function (g, f) {
        g = String(g);
        f = f || 2;
        while (g.length < f) {
            g = "0" + g
        }
        return g
    };
    return function (n, A, v) {
        var h = dateFormat;
        if (arguments.length == 1 && Object.prototype.toString.call(n) == "[object String]" && !/\d/.test(n)) {
            A = n;
            n = undefined
        }
        n = n ? new Date(n) : new Date;
        if (isNaN(n)) {
            throw SyntaxError("invalid date")
        }
        A = String(h.masks[A] || A || h.masks["default"]);
        if (A.slice(0, 4) == "UTC:") {
            A = A.slice(4);
            v = true
        }
        var x = v ? "getUTC" : "get", r = n[x + "Date"](), f = n[x + "Day"](), p = n[x + "Month"](), u = n[x + "FullYear"](), w = n[x + "Hours"](), q = n[x + "Minutes"](), z = n[x + "Seconds"](), t = n[x + "Milliseconds"](), g = v ? 0 : n.getTimezoneOffset(), k = {
            d: r,
            dd: d(r),
            ddd: h.i18n.dayNames[f],
            dddd: h.i18n.dayNames[f + 7],
            m: p + 1,
            mm: d(p + 1),
            mmm: h.i18n.monthNames[p],
            mmmm: h.i18n.monthNames[p + 12],
            yy: String(u).slice(2),
            yyyy: u,
            h: w % 12 || 12,
            hh: d(w % 12 || 12),
            H: w,
            HH: d(w),
            M: q,
            MM: d(q),
            s: z,
            ss: d(z),
            l: d(t, 3),
            L: d(t > 99 ? Math.round(t / 10) : t),
            t: w < 12 ? "a" : "p",
            tt: w < 12 ? "am" : "pm",
            T: w < 12 ? "A" : "P",
            TT: w < 12 ? "AM" : "PM",
            Z: v ? "UTC" : (String(n).match(b) || [""]).pop().replace(e, ""),
            o: (g > 0 ? "-" : "+") + d(Math.floor(Math.abs(g) / 60) * 100 + Math.abs(g) % 60, 4),
            S: ["th", "st", "nd", "rd"][r % 10 > 3 ? 0 : (r % 100 - r % 10 != 10) * r % 10]
        };
        return A.replace(a, function (m) {
            return m in k ? k[m] : m.slice(1, m.length - 1)
        })
    }
}();
dateFormat.masks = {
    "default": "ddd mmm dd yyyy HH:MM:ss",
    shortDate: "m/d/yy",
    mediumDate: "mmm d, yyyy",
    longDate: "mmmm d, yyyy",
    fullDate: "dddd, mmmm d, yyyy",
    shortTime: "h:MM TT",
    mediumTime: "h:MM:ss TT",
    longTime: "h:MM:ss TT Z",
    isoDate: "yyyy-mm-dd",
    isoTime: "HH:MM:ss",
    isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
    isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
};
dateFormat.i18n = {
    dayNames: ["dom", "seg", "ter", "qua", "qui", "sex", "sab", "Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sabado"],
    monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"]
};
Date.prototype.format = function (a, b) {
    return dateFormat(this, a, b)
};
Date.prototype.addDays = function (a) {
    this.setDate(this.getDate() + a)
};
ContainsSpecialCharacters = function (d) {
    var e = d.toString();
    var b = ["#", "@", "!", "?", "=", "*", "%", "¨", "$", "+", "[", "]", "{", "}"];
    for (var a = 0;
         a < e.length;
         a++) {
        if (InArray(e.charAt(a), b)) {
            return true
        }
    }
    return false
};
String.prototype.replaceAll = function (a, d) {
    var b = this;
    while (b.indexOf(a) >= 0) {
        b = b.replace(a, d)
    }
    return b.toString()
};
String.prototype.capitalize = function () {
    return this.replace(/\S+/g, function (b) {
        return b.charAt(0).toUpperCase() + b.slice(1).toLowerCase()
    })
};
String.prototype.initialLowerCase = function () {
    return this.replace(/\S+/g, function (b) {
        return b.charAt(0).toLowerCase() + b.slice(1)
    })
};
function getNumericTime(b) {
    var a = b.Hour + (b.Minutes < 10 ? "0" : "") + b.Minutes;
    return parseFloat(a)
}
function FormatDateUTC(b) {
    var e = new Date();
    var a = "";
    e.setUTCDate(b);
    a = e.getFullYear() != 1 ? e.format("dd/mm/yyyy HH:MM") : "";
    return a
}
function FormatDateWhithoutTimezone(a) {
    var b = a;
    b.setMinutes(a.getTimezoneOffset());
    return b.getFullYear() != 1 ? b.format("dd/mm/yyyy") : ""
}
function FormatTimeSlider(b) {
    b = Math.round(b).toString();
    var a = "";
    var e;
    var d;
    if (b.length == 4) {
        e = b.substr(0, 2);
        d = b.substr(2, 2)
    } else {
        if (b.length == 3) {
            e = b.substr(0, 1);
            d = b.substr(1, 2)
        } else {
            if (b.length == 2) {
                e = 0;
                d = b
            }
        }
    }
    if (e > 24) {
        e = 24
    }
    if (d > 59) {
        d = 59
    }
    if (isNaN(e)) {
        e = 0
    }
    if (isNaN(d)) {
        d = 0
    }
    return e + ":" + d
}
function VerifyPointsValue(d) {
    var b = new String(d).split(".");
    if (b.length > 1) {
        return false
    } else {
        return true
    }
}
function FormatPriceSlider(a) {
    return CurrencyPrefixed ? CurrentCurrencyFormat + a.FormatCurrency() : a
}
function convertSerializableDate(b) {
    var a = new Date();
    if (typeof b == "string") {
        b = b.replace("/Date(", "").replace(")/", "");
        a = new Date(parseFloat(b))
    }
    return a
}
function FormatDate(a) {
    if (a != undefined) {
        if (typeof a == "object" && a.Year) {
            a = new Date(a.Year, a.Month, a.Day)
        }
        if ((typeof a == "Date") || (typeof a == "object")) {
            if (a.getFullYear() != 1) {
                return a.format("dd/mm/yyyy")
            }
        }
    }
    return ""
}
function FormatDateValue(a) {
    var d = "";
    if (a != undefined && a != "") {
        var b = new Date(a);
        d = b.format("dd/mm/yyyy")
    }
    return d
}
function FormatDateWeek(a) {
    return DaysOfWeek[a.DayOfWeek] + ", " + FormatSimpleDateValues(a)
}
function FormatDateWeek2(a) {
    return FormatSimpleDateValues(a) + " (" + DaysOfWeek[a.DayOfWeek] + ")"
}
function DateDif(b, a) {
    return ((a - b) / (24 * 60 * 60 * 1000)).toFixed(0)
}
function NumberOfDays(b, a) {
    return 32 - new Date(a, b - 1, 32).getDate()
}
function SumDays(b, f) {
    var a = b.getDate();
    var e = b.getMonth() + 1;
    var d = b.getFullYear();
    f = f + a;
    while (f > NumberOfDays(e, d)) {
        f = f - NumberOfDays(e, d);
        e++;
        if (e > 12) {
            e = 1;
            d++
        }
    }
    return (new Date(d, (e - 1), f))
}
var DaysOfWeek = {"0": "dom", "1": "seg", "2": "ter", "3": "qua", "4": "qui", "5": "sex", "6": "sab"};
var Months = {
    "1": "Janeiro",
    "2": "Fevereiro",
    "3": "Março",
    "4": "Abril",
    "5": "Maio",
    "6": "Junho",
    "7": "Julho",
    "8": "Agosto",
    "9": "Setembro",
    "10": "Outubro",
    "11": "Novembro",
    "12": "Dezembro"
};
function FormatDateWeekMonth(a) {
    return DaysOfWeek[a.DayOfWeek] + ", " + a.Day + " " + Months[a.Month] + " " + a.Year
}
function formatMinutesInHourMinute(d) {
    var e = d % 60;
    var b = (d - e) / 60;
    var a;
    var f;
    a = b.toString();
    f = Math.round(e).toString();
    if (b < 10) {
        a = "0" + a
    }
    if (e < 10) {
        f = "0" + f
    }
    return a + ":" + f
}
function formatMinutesInHourMinuteLong(e) {
    var f = e % 60;
    var d = (e - f) / 60;
    var a;
    var g;
    var b;
    hoursString = d.toString();
    g = f.toString();
    return (d > 0 ? hoursString + (d > 1 ? " horas " : " hora ") : "") + (f > 0 ? g + (f > 1 ? " minutos" : " minuto") : "")
}
function FormatHour(d) {
    var b = "";
    var a = d.Hour;
    if (a < 10) {
        b = "0"
    }
    b += a;
    b += ":";
    if (d.Minutes < 10) {
        b += "0"
    }
    b += d.Minutes;
    return b
}
function Clone_Object(d) {
    if (typeof d !== "object" || d == null) {
        return d
    }
    var f = d instanceof Array ? [] : {};
    for (var b in d) {
        var e = d[b];
        if (typeof e == "object") {
            if (e instanceof Array) {
                f[b] = [];
                for (var a = 0;
                     a < e.length;
                     a++) {
                    if (typeof e[a] != "object") {
                        f[b].push(e[a])
                    } else {
                        f[b].push(Clone_Object(e[a]))
                    }
                }
            } else {
                if (e instanceof Date) {
                    f[b] = new Date(e.getTime())
                } else {
                    f[b] = Clone_Object(e)
                }
            }
        } else {
            f[b] = e
        }
    }
    return f
}
function toggleAnimateDIV(b, a) {
    var d = $(a);
    d.is(":hidden") ? d.slideDown("fast") : d.slideUp("fast")
}
function CalculeFlightDuration(d) {
    var b = "";
    var a = "";
    if (d > 60) {
        a = parseInt(d / 60);
        d = d % 60;
        b += a + (a > 1 ? " hs " : " h ");
        b += (d > 9 ? "" : "0") + d + " min"
    } else {
        b = d + " min"
    }
    return b
}
function ltrim(a) {
    l = new Number(a.length);
    if (l > 0) {
        while (a.charAt(0) == " " || a.charAt(0) == "\t") {
            a = a.substr(1, l - 1)
        }
    }
    return a
}
function rtrim(a) {
    l = new Number(a.length);
    if (l > 0) {
        while (a.charAt(l - 1) == " " || a.charAt(l - 1) == "\t") {
            a = a.substr(0, l - 1);
            l = a.length
        }
    }
    return a
}
function lmpStr(a, b) {
    strResult = "";
    for (iCont = 0;
         iCont < a.length;
         iCont++) {
        if (a.charAt(iCont) != b) {
            strResult += a.charAt(iCont)
        }
    }
    return strResult
}
function trim(a) {
    return (a == undefined || a == null) ? "" : ltrim(rtrim(a))
}
function soNumero(b) {
    var a = KeyStroke(b);
    return ((a > 47 && a < 58) || a == 0 || a == 8 || a == 13)
}
function soCaracter(b) {
    var a = KeyStroke(b);
    return ((a >= 97 && a <= 122) || (a >= 65 && a <= 90) || a == 0 || a == 8 || a == 13 || a == 32 || a == 199 || a == 89 || a == 231)
}
function soNumSinal(d, b) {
    var a = KeyStroke(b);
    return ((a > 47 && a < 58) || (a == 0 || a == 8 || a == 13 || a == 44 || a == d))
}
function soNumSinalsemVirgula(d, b) {
    var a = KeyStroke(b);
    return ((a > 47 && a < 58) || (a == 0 || a == 8 || a == 13 || a == d))
}
function soNaoSinal(b, a) {
    return !(KeyStroke(a) == b)
}
function KeyStroke(a) {
    var b = 0;
    if (a.which == undefined) {
        b = window.event.keyCode
    } else {
        b = a.which
    }
    return b
}
function KeyIns(b, a) {
    if (b.which == undefined) {
        window.event.keyCode = a
    } else {
        b.keyCode = a
    }
}
function Formata(b, f, e, a) {
    var d = e.keyCode;
    vr = Limpar(b.value, "0123456789");
    tam = vr.length;
    dec = a;
    if (tam < f && d != 8) {
        tam = vr.length + 1
    }
    if (d == 8) {
        tam = tam - 1
    }
    if (d == 8 || d >= 48 && d <= 57 || d >= 96 && d <= 105) {
        if (tam <= dec) {
            b.value = vr
        }
        if ((tam > dec) && (tam <= 5)) {
            b.value = vr.substr(0, tam - 2) + "," + vr.substr(tam - dec, tam)
        }
        if ((tam >= 6) && (tam <= 8)) {
            b.value = vr.substr(0, tam - 5) + "." + vr.substr(tam - 5, 3) + "," + vr.substr(tam - dec, tam)
        }
        if ((tam >= 9) && (tam <= 11)) {
            b.value = vr.substr(0, tam - 8) + "." + vr.substr(tam - 8, 3) + "." + vr.substr(tam - 5, 3) + "," + vr.substr(tam - dec, tam)
        }
        if ((tam >= 12) && (tam <= 14)) {
            b.value = vr.substr(0, tam - 11) + "." + vr.substr(tam - 11, 3) + "." + vr.substr(tam - 8, 3) + "." + vr.substr(tam - 5, 3) + "," + vr.substr(tam - dec, tam)
        }
        if ((tam >= 15) && (tam <= 17)) {
            b.value = vr.substr(0, tam - 14) + "." + vr.substr(tam - 14, 3) + "." + vr.substr(tam - 11, 3) + "." + vr.substr(tam - 8, 3) + "." + vr.substr(tam - 5, 3) + "," + vr.substr(tam - 2, tam)
        }
    }
}
function adjustDate(b) {
    valor = "";
    valor = trim(b.value);
    valor = lmpStr(valor, "/");
    iDia = 0;
    iMes = 0;
    iAno = 0;
    mask = "";
    var d = new Date();
    var g = d.getFullYear();
    var e = d.getMonth();
    var a = d.getDay();
    if (trim(valor).length != 0) {
        if (valor.length >= 1) {
            iDia = parseFloat(valor.substring(0, 2));
            if (iDia < 1) {
                iDia = 1
            }
            if (iDia > 31) {
                iDia = 31
            }
        } else {
            iDia = a
        }
        if (valor.length >= 3) {
            iMes = parseFloat(valor.substring(2, 4));
            if (iMes < 1) {
                iMes = 1
            }
            if (iMes > 12) {
                iMes = 12
            }
        } else {
            iMes = e + 1
        }
        if (valor.length > 4) {
            iAno = parseFloat(valor.substring(4, 8));
            if (iAno < 100) {
                iAno = iAno + 2000
            }
        } else {
            iAno = g
        }
        if (iAno < 1500 || iAno > 2500) {
            iAno = g
        }
        b.value = "";
        if (iMes == 4 && iDia > 30) {
            iDia = 30
        }
        if (iMes == 6 && iDia > 30) {
            iDia = 30
        }
        if (iMes == 9 && iDia > 30) {
            iDia = 30
        }
        if (iMes == 11 && iDia > 30) {
            iDia = 30
        }
        if (iMes == 2 && iDia > 29) {
            iDia = 29
        }
        if (iMes == 2 && iDia >= 28) {
            iBiSexto = iAno / 4;
            iDia = iBiSexto.toString().length == 3 ? 29 : 28
        }
        var f = iDia.toString();
        b.value += (f.length < 2 ? "0" : "") + f + "/";
        var h = iMes.toString();
        b.value += (h.length < 2 ? "0" : "") + h + "/" + iAno.toString()
    }
}
function MascData(a, b) {
    valor = "";
    valor = trim(a.value);
    valor = lmpStr(valor, "/");
    iKey = KeyStroke(b);
    strDia = "";
    strMes = "";
    if (valor.length > 0 && ((iKey >= 48 && iKey <= 57) || (iKey >= 96 && iKey <= 105))) {
        mask = "";
        if (valor.length > 0 && valor.length <= 2) {
            mask = valor;
            if (valor.length == 2) {
                if (parseFloat(valor.substring(0, 2)) > 31) {
                    mask = "31"
                }
            }
        }
        if (valor.length > 2 && valor.length <= 4) {
            if (parseFloat(valor.substring(0, 2)) > 31) {
                strDia = "31"
            } else {
                strDia = valor.substring(0, 2)
            }
            if (valor.length == 4) {
                var d = valor.substring(2, 4);
                if (parseFloat(d) > 12) {
                    strMes = "12"
                } else {
                    strMes = d
                }
            } else {
                strMes = valor.substring(2, 4)
            }
            mask = mask + strDia + "/" + strMes
        }
        if (valor.length > 4) {
            if (parseFloat(valor.substring(0, 2)) > 31) {
                strDia = "31"
            } else {
                strDia = valor.substring(0, 2)
            }
            if (valor.length > 4) {
                if (parseFloat(valor.substring(2, 4)) > 12) {
                    strMes = "12"
                } else {
                    strMes = valor.substring(2, 4)
                }
            } else {
                strMes = valor.substring(2, 4)
            }
            mask = mask + strDia + "/" + strMes + "/" + valor.substring(4, 8)
        }
        a.value = mask
    }
}
function vdHora(d) {
    valor = "";
    valor = trim(d.value);
    valor = lmpStr(valor, ":");
    iHora = 0;
    iMinuto = 0;
    mask = "";
    var e = new Date();
    var b = e.getHours();
    var f = e.getMinutes();
    if (trim(valor).length != 0) {
        if (valor.length >= 1) {
            iHora = parseFloat(valor.substring(0, 2));
            if (iHora < 0) {
                iHora = 0
            }
            if (iHora > 23) {
                iHora = 23
            }
        } else {
            iHora = b
        }
        if (valor.length >= 3) {
            iMinuto = parseFloat(valor.substring(2, 4));
            if (iMinuto < 0) {
                iMinuto = 0
            }
            if (iMinuto > 59) {
                iMinuto = 59
            }
        } else {
            iMinuto = f
        }
        d.value = "";
        var a = iHora.toString();
        d.value += (a.length < 2 ? "0" : "") + a;
        d.value += ":";
        var g = iMinuto.toString();
        d.value += (g.length < 2 ? "0" : "") + g
    }
}
function MascHora(a, b) {
    valor = "";
    valor = trim(a.value);
    valor = lmpStr(valor, ":");
    iKey = KeyStroke(b);
    strHora = "";
    strMinuto = "";
    if (valor.length > 0 && ((iKey >= 48 && iKey <= 57) || (iKey >= 96 && iKey <= 105))) {
        mask = "";
        if (valor.length > 0 && valor.length <= 2) {
            mask = valor;
            if (valor.length == 2) {
                if (parseFloat(valor.substring(0, 2)) > 23) {
                    mask = "23"
                }
            }
        }
        if (valor.length > 2 && valor.length <= 4) {
            if (parseFloat(valor.substring(0, 2)) > 23) {
                strHora = "23"
            } else {
                strHora = valor.substring(0, 2)
            }
            if (valor.length == 4) {
                if (parseFloat(valor.substring(2, 4)) > 59) {
                    strMinuto = "59"
                } else {
                    strMinuto = valor.substring(2, 4)
                }
            } else {
                strMinuto = valor.substring(2, 4)
            }
            mask = mask + strHora + ":" + strMinuto
        }
        a.value = mask
    }
}
function MascaraCPF_CNPJ(b, a) {
    if (b.value.length > 14) {
        return fnMascaraCNPJ(b, a)
    } else {
        return fnMascaraCPF(b, a)
    }
}
function fnlmpCNPJ(a) {
    strResult = "";
    for (iCont = 0;
         iCont < a.length;
         iCont++) {
        if (a.charAt(iCont) != "." && a.charAt(iCont) != "-" && a.charAt(iCont) != "/") {
            strResult += a.charAt(iCont)
        }
    }
    return strResult
}
function fnMascaraCNPJ(b, a) {
    valor = "";
    valor = trim(fnlmpCNPJ(b.value));
    Key = KeyStroke(a);
    if (valor.length > 0 && ((Key >= 48 && Key <= 57) || (Key >= 96 && Key <= 105))) {
        mask = "";
        if (valor.length > 0) {
            mask = valor;
            if (valor.length >= 2) {
                mask = valor.substring(0, 2) + "." + valor.substring(2, 5)
            }
            if (valor.length >= 5) {
                mask = valor.substring(0, 2) + "." + valor.substring(2, 5) + "." + valor.substring(5, 8)
            }
            if (valor.length >= 8) {
                mask = valor.substring(0, 2) + "." + valor.substring(2, 5) + "." + valor.substring(5, 8) + "/" + valor.substring(8, 12)
            }
            if (valor.length >= 12) {
                mask = valor.substring(0, 2) + "." + valor.substring(2, 5) + "." + valor.substring(5, 8) + "/" + valor.substring(8, 12) + "-" + valor.substring(12, 14)
            }
        }
        b.value = mask
    }
}
function MascaraCEP(a, b) {
    valor = a.value;
    valor = valor.replace("-", "");
    Key = KeyStroke(b);
    if (valor.length > 0 && ((Key >= 48 && Key <= 57) || (Key >= 96 && Key <= 105))) {
        mask = "";
        if (valor.length > 0) {
            mask = valor;
            if (valor.length >= 5) {
                mask = valor.substring(0, 5) + "-" + valor.substr(5, 3)
            }
        }
        a.value = mask
    }
}
function fnMascaraCPF(a, b) {
    valor = "";
    valor = trim(fnlmpCPF(a.value));
    Key = KeyStroke(b);
    if (valor.length > 0 && ((Key >= 48 && Key <= 57) || (Key >= 96 && Key <= 105))) {
        mask = "";
        if (valor.length > 0) {
            mask = valor;
            if (valor.length >= 3) {
                mask = valor.substring(0, 3) + "." + valor.substring(3, 6)
            }
            if (valor.length >= 6) {
                mask = valor.substring(0, 3) + "." + valor.substring(3, 6) + "." + valor.substring(6, 9)
            }
            if (valor.length >= 9) {
                mask = valor.substring(0, 3) + "." + valor.substring(3, 6) + "." + valor.substring(6, 9) + "-" + valor.substring(9, 11)
            }
        }
        a.value = mask
    }
}
function fnlmpCPF(a) {
    strResult = "";
    for (iCont = 0;
         iCont < a.length;
         iCont++) {
        if (a.charAt(iCont) != "." && a.charAt(iCont) != "-") {
            strResult += a.charAt(iCont)
        }
    }
    return strResult
}
function fnMascaraCEP(a, b) {
    valor = "";
    valor = trim(fnlmpCEP(a.value));
    Key = KeyStroke(b);
    if (valor.length > 0 && ((Key >= 48 && Key <= 57) || (Key >= 96 && Key <= 105))) {
        mask = "";
        if (valor.length > 0) {
            mask = valor;
            if (valor.length >= 5) {
                mask = valor.substring(0, 5) + "-" + valor.substring(5, 8)
            }
        }
        a.value = mask
    }
}
function fnlmpCEP(a) {
    strResult = "";
    for (iCont = 0;
         iCont < a.length;
         iCont++) {
        if (a.charAt(iCont) != "-") {
            strResult += a.charAt(iCont)
        }
    }
    return strResult
}
function CurrencyFormatted(b) {
    var a = parseFloat(b);
    if (isNaN(a)) {
        a = 0
    }
    var d = "";
    if (a < 0) {
        d = "-"
    }
    a = Math.abs(a);
    a = parseInt((a + 0.005) * 100);
    a = a / 100;
    var e = new String(a);
    var f = e.indexOf(".");
    if (f < 0) {
        e += ".00"
    }
    if (f == (e.length - 2)) {
        e += "0"
    }
    e = d + e;
    return e.replace(".", ",")
}
function NumberFormatted(a) {
    return CurrencyFormatted(a)
}
Array.prototype.remove = function (f, d) {
    try {
        var a = this.slice((d || f) + 1 || this.length);
        this.length = f < 0 ? this.length + f : f;
        return this.push.apply(this, a)
    } catch (b) {
    }
};
Number.prototype.FormatCurrency = function () {
    return CurrencyFormatted(this)
};
Number.prototype.FormatNumber = function () {
    return NumberFormatted(this)
};
this.CloseHintBoxy = function (d) {
    var a = (typeof d == "string") ? window.document.getElementById(d) : d;
    var e = $(a);
    if (e.attr("CreateHintBoxy") == true || a.getAttribute("CreateHintBoxy") == true) {
        window.document.body.removeChild(a)
    } else {
        e.css("display", "none").css("visibility", "hidden").hide()
    }
    var b = window.document.getElementById("CreateHintBoxyDIVFundo");
    if (b != null) {
        window.document.body.removeChild(b)
    }
};
function ScrollToElement(b) {
    if (b == undefined) {
        return
    }
    var d = b;
    if (b.type == undefined) {
        d = $("#" + b)[0]
    }
    var a = 0;
    var e = 0;
    while (d != null) {
        a += d.offsetLeft;
        e += d.offsetTop;
        d = d.offsetParent
    }
    window.scrollTo(a, e)
}
this.CreateHintBoxy = function (d, k, g, m, h, q, o) {
    var b;
    var n;
    var f = false;
    if (g == undefined) {
        g = true
    }
    if (k != undefined && $(k).length > 0) {
        b = $(k).position().left;
        n = $(k).position().top;
        width = $(k).outerWidth(true);
        height = $(k).outerHeight(true);
        if (q) {
            b += width
        }
    } else {
        if (self.innerHeight) {
            b = self.innerWidth;
            n = self.innerHeight
        } else {
            if (document.documentElement && document.documentElement.clientHeight) {
                b = document.documentElement.clientWidth;
                n = document.documentElement.clientHeight
            } else {
                if (document.body) {
                    b = document.body.clientWidth;
                    n = document.body.clientHeight
                }
            }
        }
        n = n <= 5 ? YMousePosition : n / 2;
        b = b / 2
    }
    if (m == undefined) {
        m = "fixed"
    }
    var p = window.document.createElement("div");
    p.id = "CreateHintBoxyDIVFundo";
    p.style.filter = "Alpha(Opacity=40)";
    if (StyleDivFunfo == 1) {
        p.style.opacity = "0.7";
        p.style.backgroundColor = "#222"
    } else {
        p.style.opacity = "0.4";
        p.style.backgroundColor = "#CCC"
    }
    if (window.scrollMaxY == 0) {
        p.style.height = "100%"
    } else {
        p.style.height = $(document).height() + 100 + "px"
    }
    p.style.width = "100%";
    p.style.position = isOLD_Navigator() ? "absolute" : "fixed";
    p.style.zIndex = "500";
    p.style.top = "0px";
    p.style.left = "0px";
    if ($("#CreateHintBoxyDIVFundo").length == 0) {
        window.document.body.appendChild(p)
    }
    if (typeof d == "string") {
        var e = window.document.createElement("div");
        if (g) {
            e.style.cursor = "pointer";
            e.onclick = function () {
                CloseHintBoxy(this)
            }
        }
        e.style.backgroundColor = "#FFF";
        e.style.position = m;
        e.innerHTML = d;
        $(e).attr("CreateHintBoxy", true);
        f = true
    } else {
        e = d
    }
    if (e.jquery == undefined) {
        e.style.display = "none";
        e.style.visibility = "visible";
        window.document.body.appendChild(e);
        var a = $(e);
        if (f) {
            b -= (a.width() / 2);
            n -= (a.height() / 2);
            if (n < 0) {
                n = n * -1
            }
        }
        if (($.browser.msie) && (parseInt($.browser.version, 10) < 8)) {
            e.style.left = "550px";
            e.style.top = "200px";
            e.style.right = "620px"
        } else {
            if (o) {
                b -= a.width()
            }
            e.style.left = b + "px";
            e.style.top = n + "px"
        }
        e.style.zIndex = "1000";
        e.style.position = m;
        a.fadeIn(200)
    } else {
        e[0].style.display = "none";
        e[0].style.visibility = "visible";
        window.document.body.appendChild(e[0]);
        var a = $(e);
        if (!h) {
            b -= (a.width() / 2);
            n -= (a.height() / 2);
            if (n < 0) {
                n = n * -1
            }
        }
        if (o) {
            b -= a.width()
        }
        if (e[0] != undefined) {
            e[0].style.left = b + "px";
            e[0].style.top = n + "px";
            e[0].style.position = m;
            e[0].style.zIndex = "1000";
            e.fadeIn(200)
        }
    }
};
function GetIATA(a) {
    var b = "";
    var a = trim(a);
    if (a.indexOf("--") > 0) {
        b = a.substr(a.indexOf("--") + 2, 3)
    } else {
        if (a.indexOf("(") > 0) {
            b = a.substr(a.indexOf("(") + 1, 3)
        } else {
            if (a.length == 3) {
                b = a
            }
        }
    }
    return b.toUpperCase()
}
function GetIATAFromURI(a) {
    IATA = "";
    URI = "";
    arrURI = undefined;
    URI = decodeURIComponent(window.location.search);
    arrURI = URI.split("&");
    if (arrURI != null && arrURI != undefined) {
        for (var b = 0;
             b < arrURI.length;
             b++) {
            Element = arrURI[b].split("=");
            if (Element[0] == a) {
                if (Element[1].indexOf("--") > 0) {
                    IATA = Element[1].substr(Element[1].indexOf("--") + 2, 3)
                } else {
                    IATA = Element[1].substr(Element[1].indexOf("(") + 1, 3)
                }
                break
            }
        }
    }
    return IATA
}
function QueryString(a, g) {
    if (!g) {
        g = 0
    }
    var b = "";
    var f = window.location.search.substring(1).split("&");
    a = a.toLowerCase();
    for (var e = 0, d = f.length;
         e < d;
         e++) {
        b = f[e].split("=");
        if (b[0].toLowerCase() == a) {
            if (g == 0) {
                return b[1]
            } else {
                g--
            }
        }
    }
}
function checkDate(e, a, d) {
    var b = /^(19|20)\d\d-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/;
    if (!b.test(d + "-" + a + "-" + e)) {
        return false
    }
    if (e == 31 && (/^0?[469]$/.test(a) || a == 11)) {
        return false
    } else {
        if (e >= 30 && a == 2) {
            return false
        } else {
            if (a == 2 && e == 29 && !(d % 4 == 0 && (d % 100 != 0 || d % 400 == 0))) {
                return false
            } else {
                return true
            }
        }
    }
}
function checkTime(d, a, b) {
    if (!b) {
        b = "00"
    }
    var e = /^(0?\d|1\d|2[0-3]):[0-5]?\d:[0-5]?\d$/;
    return e.test(d + ":" + a + ":" + b)
}
function isValidDate(f, b) {
    if (!b) {
        var a = 2;
        var g = 1;
        var d = 3
    } else {
        b = b.toLowerCase().replace(/[^dmy]/g, "");
        var g = b.indexOf("d") + 1;
        var a = b.indexOf("m") + 1;
        var d = b.indexOf("y") + 1
    }
    var e = f.match(/^\b(\d+)\D(\d+)\D(\d+)\b\b(?:\s+(\d{1,2})\D(\d{2})\D*((\d{2})?))?\b$/);
    if (!e) {
        return false
    }
    e.clearUndefined();
    e.clearStringEmpty();
    if (!checkDate(e[g], e[a], e[d])) {
        return false
    } else {
        if (e.length >= 5) {
            return checkTime(e[4], e[5], (e[6] ? e[6] : false))
        } else {
            return true
        }
    }
}
function setDateRegionalString(b) {
    var e;
    if (b && b.indexOf("/") >= 0) {
        var g = b.split("/");
        if (g.length == 3) {
            var f = g[0];
            var d = g[1] - 1;
            var a = g[2];
            e = new Date();
            e.setFullYear(a, d, f)
        }
    }
    return e
}
function isEmail(a) {
    if (a != null && a != undefined) {
        a = a.replaceAll(" ", "")
    }
    var b = new RegExp(/^[\d\w_.-]+@([\d\w_-]+\.){1,}[\w\d]+$/);
    return b.test(a)
}
function VerificaCodigoSeguranca(a, b) {
    var d = true;
    if (b == "VI") {
        d = a.length <= 3
    }
    if (b == "MC") {
        d = a.length <= 3
    }
    if (b == "MS") {
        d = a.length <= 3
    }
    if (b == "AX") {
        d = a.length == 4
    }
    if (b == "DI") {
        d = a.length <= 3
    }
    if (b == "AU") {
        d = a.length == 0
    }
    if (b == "GE") {
        d = a.length <= 3
    }
    return d
}
function ValidaCartaoCredito(a, e) {
    var g = 0;
    var d = 0;
    var f = "";
    for (i = 0, len = a.length;
         i < len;
         i++) {
        var b = a.charAt(i);
        if (b >= "0" && b <= "9") {
            f += b
        } else {
            return false
        }
    }
    if (f.length < 13) {
        return false
    }
    first = "" + f.charAt(0);
    second = "" + f.charAt(1);
    third = "" + f.charAt(2);
    firstTwo = first + second;
    firstFour = firstTwo + third + f.charAt(3);
    if (e == "MC") {
        if (first != "5" || second < "1" || second > "5") {
            return false
        }
        if (f.length != 16) {
            return false
        }
    }
    if (e == "MS") {
        if (f.substring(0, 4).indexOf("5324") == -1) {
            return false
        }
        if (f.length != 16) {
            return false
        }
    } else {
        if (e == "AU" || e == "submarino") {
            if (checkCCAura(f) != 0 || f.substring(6, 8).indexOf("18") == -1 || f.substring(0, 6).indexOf("507860") == -1) {
                return false
            }
        } else {
            if (e == "GE") {
                if (f.length == 19) {
                    if ((f.substring(0, 6) != "384100") || ((f.substr(6, 1) != "1") && (f.substr(6, 1) != "4") && (f.substr(6, 1) != "6"))) {
                        return false
                    } else {
                        return true
                    }
                } else {
                    if (f.length == 16) {
                        if (f.substring(0, 6) == "606282") {
                            return true
                        } else {
                            return false
                        }
                    } else {
                        return false
                    }
                }
            } else {
                if (e == "VI") {
                    if (first != "4") {
                        return false
                    }
                    if (f.length != 13 && f.length != 16) {
                        return false
                    }
                } else {
                    if (e == "AX") {
                        if (first != "3" || (second != "4" && second != "7")) {
                            return false
                        }
                        if (f.length != 15) {
                            return false
                        }
                    } else {
                        if (e == "DI") {
                            if (firstTwo != "36" && firstTwo != "38" && (firstTwo != "30" || (third < "0" || third > "5"))) {
                                return false
                            }
                            if (f.length != 14) {
                                return false
                            }
                        } else {
                            if (e == "JCB Cards") {
                                if (firstFour != "2131" && firstFour != "1800" && (first != "3")) {
                                    return false
                                }
                                if (f.length != 16 && first == "3") {
                                    return false
                                }
                                if (f.length != 15 && first != "3") {
                                    return false
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    for (loc = f.length - 2;
         loc >= 0;
         loc -= 2) {
        g += 1 * f.charAt(loc + 1);
        d = f.charAt(loc) * 2;
        if (d > 9) {
            g += 1
        }
        g += d % 10
    }
    if (f.length % 2 > 0) {
        g += 1 * f.charAt(0)
    }
    return (g % 10 == 0)
}
function checkCCAura(e) {
    var d;
    d = / /gi;
    e = e.replace(d, "");
    if (e.charAt(0) == "0") {
        e = e.substr(1, e.length)
    }
    ccprefix = "507860";
    prefixvalid = false;
    lengthvalid = false;
    if (e.indexOf(ccprefix) == 0) {
        prefixvalid = true
    }
    if (e.length == 19) {
        lengthvalid = true
    }
    var b = 0;
    if (!prefixvalid) {
        b += 1
    }
    if (!lengthvalid) {
        b += 2
    }
    qsum = 0;
    for (var a = 0;
         a < e.length;
         a++) {
        ch = e.substr(e.length - a - 1, 1);
        if (a % 2 != 0) {
            sum = 2 * parseFloat(ch, 10);
            qsum += (sum % 10);
            if (sum > 9) {
                qsum += 1
            }
        } else {
            qsum += parseFloat(ch, 10)
        }
    }
    if (qsum % 10 != 0) {
        b += 4
    }
    return b
}
function validCPF_CNPJ(k) {
    k = trim(fnlmpCNPJ(k));
    k = k.replace(/[^0-9]/g, "");
    if (k == "") {
        return (false)
    }
    if (((k.length == 11) && (k == 11111111111) || (k == 22222222222) || (k == 33333333333) || (k == 44444444444) || (k == 55555555555) || (k == 66666666666) || (k == 77777777777) || (k == 88888888888) || (k == 99999999999) || (k == 0))) {
        return (false)
    }
    if (!((k.length == 11) || (k.length == 14))) {
        return (false)
    }
    var b = "0123456789";
    var h = k;
    var a = true;
    var g = "";
    for (i = 0;
         i < h.length;
         i++) {
        ch = h.charAt(i);
        for (j = 0;
             j < b.length;
             j++) {
            if (ch == b.charAt(j)) {
                break
            }
        }
        if (j == b.length) {
            a = false;
            break
        }
        g += ch
    }
    if (!a) {
        return (false)
    }
    var f = g;
    var e = parseFloat(g);
    if (f != "" && !(e > "0")) {
        return (false)
    }
    if (k.length == 11) {
        var d = 0;
        for (i = 2;
             i <= 10;
             i++) {
            d += i * parseFloat(h.charAt(10 - i))
        }
        if ((d * 10 % 11 % 10) != parseFloat(h.charAt(9))) {
            return (false)
        }
        d = 0;
        for (i = 2;
             i <= 11;
             i++) {
            d += i * parseFloat(h.charAt(11 - i))
        }
        if ((d * 10 % 11 % 10) != parseFloat(h.charAt(10))) {
            return (false)
        }
    } else {
        var d = 0;
        var m = 2;
        for (i = 0;
             i <= 11;
             i++) {
            d += m * parseFloat(h.charAt(11 - i));
            m++;
            if (m == 10) {
                m = 2
            }
        }
        if ((d * 10 % 11 % 10) != parseFloat(h.charAt(12))) {
            return (false)
        }
        d = 0;
        m = 2;
        for (i = 0;
             i <= 12;
             i++) {
            d += m * parseFloat(h.charAt(12 - i));
            m++;
            if (m == 10) {
                m = 2
            }
        }
        if ((d * 10 % 11 % 10) != parseFloat(h.charAt(13))) {
            return (false)
        }
    }
    return (true)
}
function RetiraAcentos(a) {
    var m = "áàãââÁÀÃÂéêÉÊíÍóõôÓÔÕúüÚÜçÇabcdefghijklmnopqrstuvxwyz";
    var b = "aaaaaAAAAeeEEiIoooOOOuuUUcCABCDEFGHIJKLMNOPQRSTUVXWYZ";
    var d, h;
    var e = "";
    var k = a.toUpperCase();
    for (var f = 0, g = a.length;
         f < g;
         f++) {
        h = k.charAt(f);
        d = m.indexOf(h);
        if (d > -1) {
            e += b.charAt(d)
        } else {
            e += h
        }
    }
    return e
}
function SearchTerm(d) {
    var a = 0;
    var b = [];
    d = d.toLowerCase();
    for (i = 0;
         i < cities.length;
         i++) {
        if (cities[i].toLowerCase().indexOf(d, 0) != -1) {
            b[a] = cities[i];
            a++
        }
    }
    return b
}
function SearchTermWithPost(d, a) {
    var b = SearchTerm(d.term.RemoveDiacritics());
    if (b.length > 1) {
        a(b)
    } else {
        $.ajax({
            type: "POST",
            url: "/Produtos/UserControls/asmx/PesqInc.asmx/RetornarLocalidade",
            data: "{'prefixText':'" + d.term + "','count':10,'contextKey':'PesquisarLocalidade=0;PesquisarCidade=1;PesquisarEstado=1;PesquisarPais=1;PesquisarContinente=0;PesquisarAeroporto=1;PesquisarIata=1;QuantidadeItensRetorno=20;MostrarLocalidade=0;MostrarCidadeEstado=1;MostrarPais=1;MostrarAeroportoIata=1;MostrarContinente=0'}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (e) {
                a(e)
            }
        })
    }
}
function isOLD_Navigator() {
    return (navigator.userAgent.indexOf("MSIE 6.") != -1) || (navigator.userAgent.indexOf("MSIE 5.") != -1) || (navigator.userAgent.indexOf("MSIE 4.") != -1)
}
function getBrazilianDateInternal(f) {
    var a = f.getUTCDate();
    var b = f.getUTCMonth();
    var g = f.getUTCFullYear();
    var k = f.getUTCHours() - 3;
    var d = f.getUTCMinutes();
    var e = f.getUTCSeconds();
    var h = f.getTimezoneOffset();
    var m = new Date(g, b, a, k, d, e);
    m.setUTCHours(f.getUTCHours() - ((180 - h) / 60));
    return m
}
function addDayServerDate(d, a) {
    var b = parseFloat(d.Month);
    var e;
    e = 31;
    if (b == 4 && e > 30) {
        e = 30
    }
    if (b == 6 && e > 30) {
        e = 30
    }
    if (b == 9 && e > 30) {
        e = 30
    }
    if (b == 11 && e > 30) {
        e = 30
    }
    if (b == 2 && e > 29) {
        e = 29
    }
    if (b == 2 && e >= 28) {
        iBiSexto = iAno / 4;
        if (iBiSexto.toString().length == 3) {
            e = 29
        } else {
            e = 28
        }
    }
    d.Day = parseFloat(d.Day) + a;
    if (d.Day > e) {
        d.Month = parseFloat(d.Month) + 1;
        d.Day = 1
    } else {
        if (d.Day < 1) {
            d.Month = parseFloat(d.Month) - 1;
            if (d.Month > 0) {
                var b = parseFloat(d.Month);
                if (b == 4 && e > 30) {
                    e = 30
                }
                if (b == 6 && e > 30) {
                    e = 30
                }
                if (b == 9 && e > 30) {
                    e = 30
                }
                if (b == 11 && e > 30) {
                    e = 30
                }
                if (b == 2 && e > 29) {
                    e = 29
                }
                if (b == 2 && e >= 28) {
                    iBiSexto = iAno / 4;
                    if (iBiSexto.toString().length == 3) {
                        e = 29
                    } else {
                        e = 28
                    }
                }
                d.Day = e
            }
        }
    }
    if (d.Month > 12) {
        d.Month = 1;
        d.Year = parseFloat(d.Year) + 1
    } else {
        if (d.Month < 1) {
            d.Day = 31;
            d.Month = 12;
            d.Year = parseFloat(d.Year) - 1
        }
    }
    return d
}
function isValidPhoneType(d, a) {
    if (d.length < 8) {
        return false
    } else {
        if (isNaN(d)) {
            return false
        } else {
            if (a == "FIXO") {
                var b = d.substring(0, 1);
                b = parseInt(b);
                if (b > 5) {
                    return false
                }
            } else {
                if (a == "MOVEL") {
                    var b = d.substring(0, 1);
                    b = parseInt(b);
                    if (b < 6) {
                        return false
                    }
                }
            }
        }
    }
    return true
}
function EquipmentResolver(a) {
    if (a == 0) {
        return "Avião"
    } else {
        if (a == 1) {
            return "Onibus"
        } else {
            if (a == 2) {
                return "Trem"
            } else {
                if (a == 3) {
                    return "Carro"
                } else {
                    if (a == 4) {
                        return "Caminhão"
                    } else {
                        if (a == 5) {
                            return "Barco"
                        } else {
                            if (a == 6) {
                                return "Helicoptero"
                            } else {
                                return "Avião"
                            }
                        }
                    }
                }
            }
        }
    }
}
function ClientError() {
    this.Data;
    this.Namespace;
    this.ExplicitOriginalTarget;
    this.Message;
    this.Method;
    this.JSONData;
    this.UserBrowser = navigator.userAgent;
    this.PointOfSale;
    this.GetRequest = function () {
        if (CurrentPointOfSale != undefined) {
            this.PointOfSale = CurrentPointOfSale
        }
        return {
            Data: this.Data,
            Namespace: this.Namespace,
            ExplicitOriginalTarget: this.ExplicitOriginalTarget,
            Message: this.Message,
            Method: this.Method,
            JSONData: this.JSONData,
            UserBrowser: this.UserBrowser,
            PointOfSale: this.PointOfSale
        }
    }
}
this.PublishStringClientError = function (a) {
    var b = new ClientError();
    if (typeof a == "string") {
        b.Data = a
    } else {
        if (a.name == "InternalError") {
            b.Data = a.message
        } else {
            b.Data = a.message + " - " + a.stack
        }
    }
    SendClientError(b)
};
this.SendClientError = function (e) {
    var d = e.GetRequest();
    var b = 18000000;
    var a = new ServiceProxy(PathWebService);
    a.invoke("Log", {req: d}, undefined, undefined, undefined, b)
};
function CheckMaxValueToField(a, b) {
    return (a <= b)
}
function ValidatePhoneNumber(a, d) {
    var b = null;
    switch (d) {
        case PhoneType.Comercial:
        case PhoneType.Residencial:
            b = /^[0-5]/;
            break;
        case PhoneType.Celular:
            b = /^[6-9]/;
            break;
        default:
            return false
    }
    return b.test(a)
}
var Base64 = {
    _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode: function (d) {
        var a = "";
        var n, k, g, m, h, f, e;
        var b = 0;
        d = Base64._utf8_encode(d);
        while (b < d.length) {
            n = d.charCodeAt(b++);
            k = d.charCodeAt(b++);
            g = d.charCodeAt(b++);
            m = n >> 2;
            h = ((n & 3) << 4) | (k >> 4);
            f = ((k & 15) << 2) | (g >> 6);
            e = g & 63;
            if (isNaN(k)) {
                f = e = 64
            } else {
                if (isNaN(g)) {
                    e = 64
                }
            }
            a = a + this._keyStr.charAt(m) + this._keyStr.charAt(h) + this._keyStr.charAt(f) + this._keyStr.charAt(e)
        }
        return a
    }, decode: function (d) {
        var a = "";
        var n, k, g;
        var m, h, f, e;
        var b = 0;
        d = d.replace(/[^A-Za-z0-9\+\/\=]/g, "");
        while (b < d.length) {
            m = this._keyStr.indexOf(d.charAt(b++));
            h = this._keyStr.indexOf(d.charAt(b++));
            f = this._keyStr.indexOf(d.charAt(b++));
            e = this._keyStr.indexOf(d.charAt(b++));
            n = (m << 2) | (h >> 4);
            k = ((h & 15) << 4) | (f >> 2);
            g = ((f & 3) << 6) | e;
            a = a + String.fromCharCode(n);
            if (f != 64) {
                a = a + String.fromCharCode(k)
            }
            if (e != 64) {
                a = a + String.fromCharCode(g)
            }
        }
        a = Base64._utf8_decode(a);
        return a
    }, _utf8_encode: function (b) {
        b = b.replace(/\r\n/g, "\n");
        var a = "";
        for (var e = 0;
             e < b.length;
             e++) {
            var d = b.charCodeAt(e);
            if (d < 128) {
                a += String.fromCharCode(d)
            } else {
                if ((d > 127) && (d < 2048)) {
                    a += String.fromCharCode((d >> 6) | 192);
                    a += String.fromCharCode((d & 63) | 128)
                } else {
                    a += String.fromCharCode((d >> 12) | 224);
                    a += String.fromCharCode(((d >> 6) & 63) | 128);
                    a += String.fromCharCode((d & 63) | 128)
                }
            }
        }
        return a
    }, _utf8_decode: function (a) {
        var b = "";
        var d = 0;
        var e = c1 = c2 = 0;
        while (d < a.length) {
            e = a.charCodeAt(d);
            if (e < 128) {
                b += String.fromCharCode(e);
                d++
            } else {
                if ((e > 191) && (e < 224)) {
                    c2 = a.charCodeAt(d + 1);
                    b += String.fromCharCode(((e & 31) << 6) | (c2 & 63));
                    d += 2
                } else {
                    c2 = a.charCodeAt(d + 1);
                    c3 = a.charCodeAt(d + 2);
                    b += String.fromCharCode(((e & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                    d += 3
                }
            }
        }
        return b
    }
};
var Cookies = {
    setCookie: function (b, d, a) {
        var e = new Date();
        e.setDate(e.getDate() + a);
        document.cookie = b + "=" + escape(d) + ((a == null) ? "" : ";expires=" + e.toUTCString())
    }, getCookie: function (a) {
        if (document.cookie.length > 0) {
            c_start = document.cookie.indexOf(a + "=");
            if (c_start != -1) {
                c_start = c_start + a.length + 1;
                c_end = document.cookie.indexOf(";", c_start);
                if (c_end == -1) {
                    c_end = document.cookie.length
                }
                return unescape(document.cookie.substring(c_start, c_end))
            }
        }
        return ""
    }, clearCookie: function (a) {
        this.setCookie(a, "", -10)
    }, checkCookie: function (a) {
        cook = this.getCookie(a);
        return cook != null && cook != ""
    }, getCookieObject: function (a) {
        strCook = this.getCookie(a);
        p_start = strCook.toUpperCase().indexOf("JSON=");
        p_end = strCook.indexOf(";", p_start);
        if (p_end == -1) {
            p_end = strCook.length
        }
        var b = strCook.substring((p_start + 5), p_end);
        return $.evalJSON(b)
    }
};
function isCCInternational(d) {
    return false;
    if (BinCCInternacional != undefined) {
        for (var b = 0, a = BinCCInternacional.length;
             b < a;
             b++) {
            var e = BinCCInternacional[b].toString().length;
            if (d.length < e) {
                return false
            } else {
                if (BinCCInternacional[b] == d.substring(0, e)) {
                    return true
                }
            }
        }
    }
    return false
}
function CreateStarsTypes(d) {
    var a = ["silver", "silver", "silver", "silver", "silver"];
    var b = 0;
    for (b;
         b < d;
         b++) {
        a[b] = "gold"
    }
    if (d < b) {
        a[b - 1] = "half"
    }
    return a
}
function SetLocationName(a) {
    var b = a.FullName;
    if (a.RegionCode && a.RegionCode != "") {
        b += " / " + a.RegionCode
    }
    if (a.Country && a.Country != "") {
        b += ", " + a.Country
    }
    return b
}
function AdjustIATA(a) {
    return a.replaceAll("---", ")").replaceAll("--", "(")
}
function SetLocationNameWithIATA(a) {
    var b = a.FullName;
    if (a.RegionCode && a.RegionCode != "") {
        b += " / " + a.RegionCode
    }
    if (a.Country && a.Country != "") {
        b += ", " + a.Country
    }
    if (a.IATA && trim(a.IATA) != "") {
        b += " (" + a.IATA + ")"
    }
    return b
}
var Sources = {
    None: 0,
    Amadeus: 1,
    Sabre: 2,
    Tam: 3,
    Gol: 4,
    Team: 5,
    OceanAir: 6,
    WebJet: 7,
    Total: 8,
    Trip: 9,
    Passaredo: 10,
    AirMinas: 11,
    TAF: 12,
    Rico: 13,
    Sete: 14,
    NHT: 15,
    Pantanal: 16,
    AeroStar: 17,
    Azul: 18,
    Sol: 19,
    H2W: 20,
    Tourico: 21,
    Travel: 22,
    Trend: 23,
    HotelBeds: 25,
    "0": "None",
    "1": "Amadeus",
    "2": "Sabre",
    "3": "Tam",
    "4": "Gol",
    "5": "Team",
    "6": "OceanAir",
    "7": "WebJet",
    "8": "Total",
    "9": "Trip",
    "10": "Passaredo",
    "11": "AirMinas",
    "12": "TAF",
    "13": "Rico",
    "14": "Sete",
    "15": "NHT",
    "16": "Pantanal",
    "17": "AeroStar",
    "18": "Azul",
    "19": "Sol",
    "20": "H2W",
    "21": "Tourico",
    "22": "Travel",
    "23": "Trend",
    "25": "HotelBeds"
};
String.prototype.startsWith = function (a) {
    return (this.match("^" + a) == a)
};
String.prototype.endsWith = function (a) {
    return (this.match(a + "$") == a)
};
String.prototype.isEmpty = function (a) {
    return this.length == 0
};
Array.prototype.isEmpty = function () {
    return this.length == 0
};
Array.prototype.where = function (e) {
    var d = [];
    for (var b = 0, a = this.length;
         b < a;
         b++) {
        if (e(this[b])) {
            d.push(this[b])
        }
    }
    return d
};
Array.prototype.select = function (b) {
    var e = [];
    for (var d = 0, a = this.length;
         d < a;
         d++) {
        e.push(b(this[d]))
    }
    return e
};
Array.prototype.first = function (d) {
    for (var b = 0, a = this.length;
         b < a;
         b++) {
        if (d(this[b])) {
            return this[b]
        }
    }
    return undefined
};
Array.prototype.contains = function (d) {
    for (var b = 0, a = this.length;
         b < a;
         b++) {
        if (typeof d === "string") {
            if (this[b] == d) {
                return true
            }
        } else {
            if (d(this[b])) {
                return true
            }
        }
    }
    return false
};
Array.prototype.distinct = function () {
    var d = {};
    var e = [];
    for (var b = 0, a = this.length;
         b < a;
         b++) {
        if (!d[this[b]]) {
            d[this[b]] = true;
            e.push(this[b])
        }
    }
    return e
};
Array.prototype.count = function (e) {
    var d = 0;
    for (var b = 0, a = this.length;
         b < a;
         b++) {
        if (e(this[b])) {
            d++
        }
    }
    return d
};
String.prototype.RemoveDiacritics = function () {
    var e = "áàãââÁÀÃÂéêÉÊíÍóõôÓÔÕúüÚÜçÇabcdefghijklmnopqrstuvxwyzABCDEFGHIJKLMNOPQRSTUVXWYZñòîÎìÌèÈ";
    var k = "aaaaaAAAAeeEEiIoooOOOuuUUcCabcdefghijklmnopqrstuvxwyzABCDEFGHIJKLMNOPQRSTUVXWYZnoiIiIeE";
    var f, b;
    var h = "";
    var g = this;
    for (var d = 0, a = this.length;
         d < a;
         d++) {
        b = g.charAt(d);
        f = e.indexOf(b);
        h += f > -1 ? k.charAt(f) : b
    }
    return h
};
Array.prototype.binarySearch = function binarySearch(h, b) {
    var a = 0, g = this.length - 1, e, f;
    var d = -1;
    while (a <= g) {
        e = parseInt((a + g) / 2, 10);
        f = b(this[e], h);
        if (f > 0) {
            a = e + 1
        } else {
            if (f < 0) {
                g = e - 1
            } else {
                d = e;
                break
            }
        }
    }
    if (d < 0) {
        d = undefined
    }
    return d
};
Array.prototype.any = function (e) {
    var b = typeof e == "function" ? e : function (f) {
        return f == e
    };
    for (var d = 0, a = this.length;
         d < a;
         d++) {
        if (b(this[d])) {
            return true
        }
    }
    return false
};
Array.prototype.orderBy = function (f) {
    var b = this.length;
    if (b >= 2) {
        for (var e = 0;
             e < b;
             e++) {
            for (var d = 0;
                 d < b;
                 d++) {
                if (f(this[e]) < f(this[d])) {
                    var a = this[e];
                    this[e] = this[d];
                    this[d] = a
                }
            }
        }
    }
};
Array.prototype.clearUndefined = function () {
    for (var a = 0;
         a < this.length;
         a++) {
        if (this[a] == undefined) {
            this.remove(a);
            a--
        }
    }
    return false
};
Array.prototype.clearStringEmpty = function () {
    for (var a = 0;
         a < this.length;
         a++) {
        if (this[a] == "" || this[a] == null || this[a] == undefined) {
            this.remove(a);
            a--
        }
    }
    return false
};
Array.prototype.min = function () {
    var d = undefined;
    for (var b = 0, a = this.length;
         b < a;
         b++) {
        if (!d || this[b] < d) {
            d = this[b]
        }
    }
    return !d ? 0 : d
};
Array.prototype.max = function () {
    var b = undefined;
    for (var a = 0;
         a < this.length;
         a++) {
        if (!b || this[a] > b) {
            b = this[a]
        }
    }
    return !b ? 0 : b
};
Array.prototype.sum = function (b) {
    if (b == undefined) {
        b = function (e) {
            return e
        }
    }
    var d = 0;
    for (var a = 0;
         a < this.length;
         a++) {
        d += b(this[a])
    }
    return d
};
Array.prototype.removeAll = function (d) {
    var a = [];
    for (var b = 0;
         b < this.length;
         b++) {
        if (!d(this[b])) {
            a.push(this[b])
        }
    }
    return a
};
function GenderCodeToGenderString(a) {
    switch (parseInt(a)) {
        case Gender.Masculino:
            return "Masculino";
        case Gender.Feminino:
            return "Feminino"
    }
}
function PaxTypeCodeToPaxTypeString(a) {
    switch (a) {
        case PaxType.Adulto:
            return "Adulto";
        case PaxType.Crianca:
            return "Criança";
        case PaxType.Bebe:
            return "Bebê"
    }
}
function CabinTypeCodeToCabinTypeString(a) {
    switch (a) {
        case CabinType.PrimeiraClasse:
            return "Primeira Classe";
        case CabinType.Executiva:
            return "Executiva";
        case CabinType.Economica:
            return "Economica"
    }
}
function GetCCExpireDateFromDate(a) {
    return a.format("MM/yyyy")
}
function ArrToString(d) {
    var b = "";
    for (var a in d) {
        b += d[a]
    }
    return b
}
function isValidDate(f, b) {
    if (!b) {
        var a = 2;
        var g = 1;
        var d = 3
    } else {
        b = b.toLowerCase().replace(/[^dmy]/g, "");
        var g = b.indexOf("d") + 1;
        var a = b.indexOf("m") + 1;
        var d = b.indexOf("y") + 1
    }
    var e = f.match(/^\b(\d+)\D(\d+)\D(\d+)\b\b(?:\s+(\d{1,2})\D(\d{2})\D*((\d{2})?))?\b$/);
    if (!e) {
        return false
    }
    e.clearUndefined();
    e.clearStringEmpty();
    if (!checkDate(e[g], e[a], e[d])) {
        return false
    } else {
        return true
    }
}
function checkDate(e, a, d) {
    var b = /^(19|20)\d\d-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/;
    if (!b.test(d + "-" + a + "-" + e)) {
        return false
    }
    if (e == 31 && (/^0?[469]$/.test(a) || a == 11)) {
        return false
    } else {
        if (e >= 30 && a == 2) {
            return false
        } else {
            if (a == 2 && e == 29 && !(d % 4 == 0 && (d % 100 != 0 || d % 400 == 0))) {
                return false
            } else {
                return true
            }
        }
    }
}
function checkTime(d, a, b) {
    if (!b) {
        b = "00"
    }
    var e = /^(0?\d|1\d|2[0-3]):[0-5]?\d:[0-5]?\d$/;
    return e.test(d + ":" + a + ":" + b)
}
String.prototype.ReplaceStringMessage = function (a) {
    if (a == "BRADESCO") {
        this.replaceAll("compra", "resgate");
        this.replaceAll("reais", "pontos");
        this.replaceAll("Problemas de processamento", "Ocorreu um erro no processamento de seu resgate. Por favor refaça sua busca em alguns minutos.")
    }
};
String.prototype.ReplaceHyphens = function () {
    return this.replaceAll("---", ")").replaceAll("--", "(")
};
function verificarDataPesquisaVoo(a) {
    if (a.value != "") {
        if (isValidDate(a.value)) {
            adjustDate(a);
            AirMotorUC.SearchRules(a)
        } else {
            a.value = ""
        }
    }
}
function InArray(d, b) {
    for (var a = 0;
         a < b.length;
         a++) {
        if (d == b[a]) {
            return true
        }
    }
    return false
}
function getParamQueryString(a) {
    hu = window.location.search.substring(1);
    gy = hu.split("&");
    for (i = 0;
         i < gy.length;
         i++) {
        ft = gy[i].split("=");
        if (ft[0] == a) {
            return ft[1]
        }
    }
}
String.prototype.normalize = function () {
    return trim(this).RemoveDiacritics().toLowerCase()
};
function Reverse(d) {
    var e = "";
    var b = d.split("");
    for (var a = b.length - 1;
         a > -1;
         a--) {
        e += b[a]
    }
    return e
}
function PutPoint(a) {
    a = Reverse(a);
    a = a.replace(/(\d{3})()/g, "$1.$2");
    a = Reverse(a).replace(/^\./, "");
    return a
}
function pluginDefaultBehavior(e, f, d, a) {
    if (!e.length) {
        return e
    }
    var b = d[0];
    var d = Array.prototype.slice.call(d, 1);
    if (typeof b == "string") {
        var g = $(e[0]).data(f + "Data");
        if (g && g[b]) {
            return g[b].apply(e, d)
        } else {
            if (console) {
                console.log("Unable to find method " + b + " in element " + f)
            }
        }
    } else {
        return e.each(function () {
            var h = $(this).data(f + "Data");
            if (!h) {
                h = a();
                $(this).data(f + "Data", h)
            }
            h.initialize(this, b)
        })
    }
}
function openPopunder() {
    if (CurrentPointOfSale == "SUBMARINO" || CurrentPointOfSale == "AMERICANAS" || CurrentPointOfSale == "SHOPTIME") {
        TheNewWin = window.open("", "name" + CurrentPointOfSale, "height=359,width=615,top=0,left=0,close=yes,dialog=yes,minimizable=no,toolbar=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no");
        TheNewWin.document.write('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml">');
        TheNewWin.document.write('<head><title>Fale Conosco</title></head><body style="overflow:hidden" bgcolor="#ffffff"><img src="' + rootPath);
        TheNewWin.document.write("Styles/images/" + CurrentPointOfSale + '/img-popunder.jpg" /></body></html>');
        TheNewWin.blur();
        window.focus()
    }
}
if (typeof Util == "undefined") {
    Util = {}
}
Util.JSONMinimumDeserializer = function (a) {
    if ($.isArray(a) && a.length == 2) {
        var b = function (h, e, g) {
            if (!e || h == undefined) {
                return h
            }
            var k = e.d || e.e ? [] : {};
            var d = g[e.i];
            if (e.d) {
                for (var f = 0;
                     f < h.length;
                     f += 2) {
                    k.push({Key: h[f], Value: b(h[f + 1], d, g)})
                }
            } else {
                if (e.e) {
                    for (var f = 0;
                         f < h.length;
                         f++) {
                        k.push(b(h[f], d, g))
                    }
                } else {
                    for (var f = 0;
                         f < e.p.length;
                         f++) {
                        k[e.p[f].n] = b(h[f], g[e.p[f].i], g)
                    }
                }
            }
            return k
        };
        return b(a[1], a[0][0], a[0])
    }
    return a
};
Util.GetMethodToInvoke = function (a) {
    return a + (typeof Global != "undefined" && Global.UseJSONMinimum ? "JSONMinimum" : "")
};
function imgError(a) {
    a.attr("src", "Styles/images/icos_cias/companhia.png")
}
function isNull(a) {
    return (a == undefined || a == null)
}
function isEmpty(a) {
    return (!isNull(a) && a == "")
}
function isNullOrEmpty(a) {
    return (isNull(a) || isEmpty(a))
}
function GetOriginIATA() {
    var d = "";
    var b = Cookies.getCookie("GeoLocationSite");
    if (b == "") {
        return ""
    }
    var a = b.split("_");
    if (a.length < 2) {
        return ""
    }
    var e = parseInt(a[1]);
    switch (e) {
        case 1:
            d = "RBR";
            break;
        case 2:
            d = "MCZ";
            break;
        case 3:
            d = "MCP";
            break;
        case 4:
            d = "MAO";
            break;
        case 5:
            d = "SSA";
            break;
        case 6:
            d = "FOR";
            break;
        case 7:
            d = "BSB";
            break;
        case 8:
            d = "VIX";
            break;
        case 11:
            d = "CGR";
            break;
        case 13:
            d = "SLZ";
            break;
        case 14:
            d = "CGB";
            break;
        case 15:
            d = "BHZ";
            break;
        case 16:
            d = "BEL";
            break;
        case 17:
            d = "JPA";
            break;
        case 18:
            d = "CWB";
            break;
        case 20:
            d = "THE";
            break;
        case 21:
            d = "RIO";
            break;
        case 22:
            d = "NAT";
            break;
        case 23:
            d = "POA";
            break;
        case 24:
            d = "PVH";
            break;
        case 25:
            d = "BVB";
            break;
        case 26:
            d = "FLN";
            break;
        case 27:
            d = "SAO";
            break;
        case 28:
            d = "AJU";
            break;
        case 29:
            d = "GYN";
            break;
        case 30:
            d = "REC";
            break;
        case 31:
            d = "PMW";
            break;
        default:
            d = "";
            break
    }
    return d
}
function setSelectionRange(b, d, e) {
    if (b.setSelectionRange) {
        b.focus();
        b.setSelectionRange(d, e)
    } else {
        if (b.createTextRange) {
            var a = b.createTextRange();
            a.collapse(true);
            a.moveEnd("character", e);
            a.moveStart("character", d);
            a.select()
        }
    }
}
function setCaretToPos(a, b) {
    setSelectionRange(a, b, b)
}
function getParameterByName(b) {
    b = b.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var a = "[\\?&]" + b + "=([^&#]*)";
    var e = new RegExp(a);
    var d = e.exec(window.location.search);
    if (d == null) {
        return ""
    } else {
        return decodeURIComponent(d[1].replace(/\+/g, " "))
    }
}
function SetCookie(f, e, d) {
    var b = new Date();
    var a = new Date();
    if (d == null || d == 0) {
        d = 1
    }
    a.setTime(b.getTime() + 3600000 * 24 * d);
    document.cookie = f + "=" + escape(e) + ";expires=" + a.toGMTString() + ";path=/"
}
function getCookie(f) {
    var a = "";
    var g = " " + document.cookie + ";";
    var d = " " + f + "=";
    var b = g.indexOf(d);
    var e;
    if (b != -1) {
        b += d.length;
        e = g.indexOf(";", b);
        a = unescape(g.substring(b, e))
    }
    return a
}
function getCookieMultiValue(b, a) {
    var d = getCookie(b);
    if (d == "") {
        return ""
    }
    cookievaluesep = d.split("&");
    for (c = 0;
         c < cookievaluesep.length;
         c++) {
        cookienamevalue = cookievaluesep[c].split("=");
        if (cookienamevalue.length > 1) {
            if (cookienamevalue[0] == a) {
                return cookienamevalue[1].toString()
            }
        } else {
            return ""
        }
    }
    return ""
}
function setCookieMultiValue(b, a, e, f) {
    var d = getCookie(b);
    if (d.trim() == "") {
        setCookie(b, a + "=" + e, f);
        return
    }
    getcookiekeyvalue = getCookieMultiValue(b, a);
    newCookieValue = d.trim();
    if (getcookiekeyvalue == "") {
        newCookieValue += "&" + a + "=" + e
    } else {
        if (newCookieValue.substr(0, a.length + 1) == (a + "=")) {
            totalcookiekeylength = a.length + 1 + getCookieMultiValue(b, a).length + 1;
            newCookieValue = newCookieValue.substr(totalcookiekeylength);
            if (newCookieValue.trim() == "") {
                newCookieValue = a + "=" + e
            } else {
                newCookieValue += "&" + a + "=" + e
            }
        } else {
            fullcookiekey = "&" + a + "=" + getcookiekeyvalue;
            if (newCookieValue.indexOf(fullcookiekey) != -1) {
                newCookieValue = ReplaceAll(newCookieValue, fullcookiekey, "");
                if (newCookieValue.trim() == "") {
                    newCookieValue = a + "=" + e
                } else {
                    newCookieValue += "&" + a + "=" + e
                }
            }
        }
    }
    setCookie(b, newCookieValue, f)
}
function ReplaceAll(a, b, d) {
    newvarbarray = a.split(b);
    newvarb = newvarbarray.join(d);
    return newvarb
}
String.prototype.trim = function () {
    return this.replace(/(^\s*)|(\s*$)/g, "")
};
$(document).ready(function () {
    setInterval(function () {
        $("img.img-cias, img.icon-cia").unbind("error");
        $("img.img-cias, img.icon-cia").error(function () {
            imgError($(this))
        })
    }, 1000)
});
$(document).ready(function () {
    var a = getParameterByName("AffiliatedID");
    if (a != "") {
        SetCookie("Utm_Source_B2WViagens", a, 30)
    }
});
function leftTabClicked() {
    document.getElementById("leftBox").style.display = "block";
    document.getElementById("rightBox").style.display = "none";
    document.getElementById("spanLeftTab").className = "ativo";
    document.getElementById("spanRightTab").className = "";
    document.getElementById("spanLeftSubtitle").style.display = "block";
    document.getElementById("spanRightSubtitle").style.display = "none"
}
function rightTabClicked() {
    document.getElementById("leftBox").style.display = "none";
    document.getElementById("rightBox").style.display = "block";
    document.getElementById("spanLeftTab").className = "";
    document.getElementById("spanRightTab").className = "ativo";
    document.getElementById("spanLeftSubtitle").style.display = "none";
    document.getElementById("spanRightSubtitle").style.display = "block"
};